[configure]
stages = c, env
option =
    prefix: /usr/local
option =
    mingw:

[c:env]
required =
    -D_GNU_SOURCE
    -D_REENTRANT
    -Wall
    -Wextra
    -Wno-attributes
    -Wno-unused-function
    -ffast-math
    -I.

required_osx =
    -I/usr/local/include
    -L/usr/local/lib
    -Isupport/osx/include
    -Lsupport/osx/lib
    -framework CoreFoundation
    -framework IOKit

required_win32 =
    -Isupport/win32/include
    -Lsupport/win32/lib

required_if_MINGW =
    -I{MINGW}/include
    -I{MINGW}/include/ddk

[c:header]
required =
    ctype.h
    dirent.h
    errno.h
    inttypes.h
    limits.h
    stdarg.h
    stdbool.h
    stddef.h
    stdio.h
    stdlib.h
    string.h
    sys/param.h
    sys/stat.h
    sys/time.h
    sys/types.h
    talloc.h
    time.h
    unistd.h

optional =
    termios.h

required_posix =
    arpa/inet.h
    fcntl.h
    netdb.h
    net/if.h
    netinet/in.h
    poll.h
    sys/ioctl.h
    sys/socket.h

required_linux =
    < required_posix
    linux/termios.h
    sys/sendfile.h

required_osx =
    < required_posix
    CoreFoundation/CoreFoundation.h
    IOKit/IOKitLib.h
    IOKit/serial/IOSerialKeys.h
    IOKit/serial/ioss.h
    sys/syslimits.h
    sys/uio.h

require_win32 =
    cfgmgr32.h
    io.h
    setupapi.h
    tchar.h
    usbioctl.h
    usbiodef.h
    windows.h
    winnls.h
    winsock2.h
    ws2tcpip.h

[c:library]
required =
    talloc: talloc.h

required_win32 =
    ws2_32: windows.h, winsock2.h

[c:define]
optional =
    AI_V4MAPPED:  sys/types.h, sys/socket.h, netdb.h
    SO_REUSEADDR: sys/socket.h
    SO_REUSEPORT: sys/socket.h
    BOTHER:       linux/termios.h

[c:type]
required =
    uint8_t:   inttypes.h
    uint16_t:  inttypes.h
    uint32_t:  inttypes.h
    uint64_t:  inttypes.h

optional_posix =
    struct sockaddr_storage: sys/socket.h
    struct sockaddr_in:      netinet/in.h
    struct sockaddr_in6:     netinet/in.h
    socklen_t:               sys/types.h, sys/socket.h, netinet/in.h

optional_linux =
    < optional_posix

optional_osx =
    < optional_posix

optional_win32 =
    socklen_t: sys/types.h, winsock2.h, ws2tcpip.h

optional_if_HAVE_LINUX_TERMIOS_H =
    struct termios:  linux/termios.h
    struct termios2: linux/termios.h
    struct termiox:  linux/termios.h

[c:member]
optional =
    struct termios.c_ispeed:  linux/termios.h
    struct termios.c_ospeed:  linux/termios.h
    struct termios2.c_ispeed: linux/termios.h
    struct termios2.c_ospeed: linux/termios.h

[env:generate]
source = {target}.in
target =
    common/config.h
    Makefile
